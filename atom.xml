<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Winry&#39;s</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://winry.me/"/>
  <updated>2017-07-26T16:56:10.057Z</updated>
  <id>https://winry.me/</id>
  
  <author>
    <name>winry</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>exception handling and dynamic scope</title>
    <link href="https://winry.me/2017/07/26/exception-handling%20-and-dynamic-scope/"/>
    <id>https://winry.me/2017/07/26/exception-handling -and-dynamic-scope/</id>
    <published>2017-07-25T16:00:00.000Z</published>
    <updated>2017-07-26T16:56:10.057Z</updated>
    
    <content type="html">&lt;p&gt;最近在上coursera上的programming language的时候，Dan提到exception handling和dynamic scope很相似，但是只是简单的提了一下，并没有说哪里相似，接下来就比较一下这两者。&lt;/p&gt;
&lt;p&gt;先看一个例子。&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;x&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;(&lt;/span&gt;) = x&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;/span&gt;) = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;x&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  f()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里f2()的值是什么呢，在scala里是1，因为scala用的是lexical scope，如果是dynamic scope那就是2。&lt;/p&gt;
&lt;p&gt;为了说明lexical scope和dynamic scope，首先要搞清楚自由变量的概念，自由变量就是函数里除了传进来的参数以外的变量，在f()里面就是x，因为x不是f()的参数。&lt;/p&gt;
&lt;p&gt;在lexical scope的情况下，自由变量的值是函数定义时自由变量的值。这时候f()里面的x就是1。实际上这时候函数包括了两个部分，一部分是它的code，另一部分是自由变量和它的值的映射，这两个部分合起来称为闭包。函数调用的时候自由变量的值是确定的，就是闭包里的值。&lt;/p&gt;
&lt;p&gt;在dynamic scope的情况下，自由变量的值就不太好确定了，函数调用的时候会去查runtime stack的符号表，自由变量最后的值（后面的值会覆盖前面的）就是就是它这次函数调用里的值。&lt;/p&gt;
&lt;p&gt;最后来看一下exception handling是怎么一回事，假设我们在代码的很多地方，handle了同一个异常，我们光看代码是不能确定最后哪个handling会起作用的。当一个异常发生时，只有在runtime，函数调用栈顶的那个函数最后会handle那个异常。是不是和dynamic scope有点相似呢。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在上coursera上的programming language的时候，Dan提到exception handling和dynamic scope很相似，但是只是简单的提了一下，并没有说哪里相似，接下来就比较一下这两者。&lt;/p&gt;
&lt;p&gt;先看一个例子。&lt;/p&gt;
&lt;figu
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="dynamic scope" scheme="https://winry.me/tags/dynamic-scope/"/>
    
  </entry>
  
  <entry>
    <title>spark combineByKey</title>
    <link href="https://winry.me/2016/12/01/spark-combineByKey/"/>
    <id>https://winry.me/2016/12/01/spark-combineByKey/</id>
    <published>2016-11-30T16:00:00.000Z</published>
    <updated>2016-12-01T02:46:41.000Z</updated>
    
    <content type="html">&lt;p&gt;combineByKey是spark的一个pair transformation。当你需要根据key来合并你的value，而你期望的合并后的value的返回类型和原本value的类型不同的时候你就会用到它（reduceByKey的返回类型则和原本的pair相同）。用groupByKey再对groupBy的结果处理最终可以达到相同的效果，但是性能却不一样，实际上combineByKey提供的是更高级的抽象。性能上的差异可以看这篇文章:&lt;a href=&quot;https://databricks.gitbooks.io/databricks-spark-knowledge-base/content/best_practices/prefer_reducebykey_over_groupbykey.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;avoid groupByKey&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;combineByKey函数长这样，V表示原本的value的类型，C表示你期望返回的合并之后的类型。&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;combineByKey&lt;/span&gt;[&lt;/span&gt;&lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;](&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      createCombiner: &lt;span class=&quot;type&quot;&gt;V&lt;/span&gt; =&amp;gt; &lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mergeValue: (&lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mergeCombiners: (&lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;): &lt;span class=&quot;type&quot;&gt;RDD&lt;/span&gt;[(&lt;span class=&quot;type&quot;&gt;K&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;C&lt;/span&gt;)] = self.withScope &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    combineByKeyWithClassTag(createCombiner, mergeValue, mergeCombiners)(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看一下combineByKey的几个参数：&lt;br&gt;第一个参数createCombiner表示如何由一个原本的value构造出combiner的对象，combiner可能包括一些value的field，以及一些value中没有的初始值。&lt;br&gt;第二个参数mergeValue表示value是如何被合并到combiner里的。&lt;br&gt;第三个参数mergeCombiners表示各个combiner的结果是如何被合并的。&lt;/p&gt;
&lt;p&gt;最后看一个用combineByKey来求平均数的例子。它比求和多了一个步骤，需要把和除以个数（这个时候简单的reduceByKey就满足不了需求了）。所以combiner需要两个参数，一个和，一个个数。&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;val scores: RDD[(String, &lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;)] = sc.parallelize(&lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;((&lt;span class=&quot;string&quot;&gt;&quot;chinese&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&quot;chinese&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&quot;math&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;), (&lt;span class=&quot;string&quot;&gt;&quot;math&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;87&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scores.combineByKey(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (v) =&amp;gt; (v, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (acc: (&lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;), v) =&amp;gt; (acc._1 + v, acc._2 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      (acc1: (&lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;), acc2: (&lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;Int&lt;/span&gt;)) =&amp;gt; (acc1._1 + acc2._1, acc1._2 + acc2._2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;).collectAsMap().&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt;(e =&amp;gt; println(&lt;span class=&quot;string&quot;&gt;&quot;course:&quot;&lt;/span&gt; + e._1 + &lt;span class=&quot;string&quot;&gt;&quot;, avg:&quot;&lt;/span&gt; + e._2._1 / e._2._2))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    course:chinese, avg:89&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    course:math, avg:73&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码在scala-2.11.8,spark-core_2.11-2.0.0下编译通过。&lt;br&gt;参考:&lt;a href=&quot;https://zhangyi.gitbooks.io/spark-in-action/content/chapter2/combinebykey.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;combinebykey&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;combineByKey是spark的一个pair transformation。当你需要根据key来合并你的value，而你期望的合并后的value的返回类型和原本value的类型不同的时候你就会用到它（reduceByKey的返回类型则和原本的pair相同）。用grou
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="scala" scheme="https://winry.me/tags/scala/"/>
    
      <category term="spark" scheme="https://winry.me/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>anime top 20</title>
    <link href="https://winry.me/2016/08/02/anime-top-20/"/>
    <id>https://winry.me/2016/08/02/anime-top-20/</id>
    <published>2016-08-01T16:00:00.000Z</published>
    <updated>2016-08-02T13:18:53.050Z</updated>
    
    <content type="html">&lt;p&gt; （三年前写的TOP20，补充几部这几年看过比较好的。高达00，圣母在上，京吹部，女子落语，touch，TT，月刊少女，邻座的怪同学，悠哉，飞跃巅峰1，还有幸运星不知道当时为什么没排进去）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;个人向，不公正，不客观，排名不分先后&lt;/p&gt;
&lt;h3 id=&quot;凉宫春日的忧郁&quot;&gt;凉宫春日的忧郁&lt;/h3&gt;&lt;p&gt;京都的轻改巅峰，不少人的入宅作，1096的冒险，永无止境的八月，团长和囧虚的吻戏太棒。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/凉宫09.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;食灵零&quot;&gt;食灵零&lt;/h3&gt;&lt;p&gt;最喜欢的黑长直，没有之一，命运如此悲惨的女主大概没有第二个了。百合的部分也食的开心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/食灵零.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;k-on!&quot;&gt;k-on!&lt;/h3&gt;&lt;p&gt;入宅作，呆唯本命，希望京都把废萌永远进行下去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/k-on.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;侧耳倾听&quot;&gt;侧耳倾听&lt;/h3&gt;&lt;p&gt;吉卜力唯一喜欢的作品吧，《coutry road》插入的很棒，尤其喜欢女主住宅的作画,明亮的色彩让人有心底敞开的温馨感。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/侧耳倾听.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;龙与虎&quot;&gt;龙与虎&lt;/h3&gt;&lt;p&gt;二次元女神实乃梨w，龙儿好男主，人物的刻画非常细腻，节奏把握也特别好的轻改，心目中节操社的最好作品。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/龙与虎.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;化物语&quot;&gt;化物语&lt;/h3&gt;&lt;p&gt;神作之壁，销量最好的轻改，垃圾君和荡漾在星空下的那一段也是名场景了，西尾的废话流配合新房的独特风格意外的有趣。(不过物语系列后面就都很烂了,当然销量还是摆在那)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/化物语.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;钢之炼金术师FA&quot;&gt;钢之炼金术师FA&lt;/h3&gt;&lt;p&gt;王道作品，长番剧情却一点也不拖沓，打戏精彩，热血的同时也讨论了哲理，yui的声音超棒。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/钢炼fa.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;白色相簿&quot;&gt;白色相簿&lt;/h3&gt;&lt;p&gt;最令我纠结的一部作品了，虽然全员倒贴，男主又处处留情，仍然很难判断他的对错，蛮耐人寻味的展开,以及奈姬经典的《深爱》。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/wa.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;君望&quot;&gt;君望&lt;/h3&gt;&lt;p&gt;最好的恋爱番， 个人还是倾向于はるか的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/君望.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;神枪少女（一期）&quot;&gt;神枪少女（一期）&lt;/h3&gt;&lt;p&gt;和fate的主仆设定相比各有风味，氛围很好的片子，刻画义体少女独有的纤细情感(反差萌?)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/神枪少女.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;黑之契约者（全期）&quot;&gt;黑之契约者（全期）&lt;/h3&gt;&lt;p&gt;黑叔最叼的男主，那年香菜还不是兵库北，打斗超棒，有生之年系列。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/黑之契约者.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;EVA&quot;&gt;EVA&lt;/h3&gt;&lt;p&gt;嘛，不需要多说，心目中一号机的暴走是宇宙最强暴走。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/eva.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;命运石之门&quot;&gt;命运石之门&lt;/h3&gt;&lt;p&gt;良心，大量铺垫之后包袱抖落的那一刻能只能赞叹精彩了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/命运石之门.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;全金属狂潮(校园篇)&quot;&gt;全金属狂潮(校园篇)&lt;/h3&gt;&lt;p&gt;又是一部轻改，外传超越本篇的作品，京都拍校园就是这么叼。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/全金校园篇.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;现视研&quot;&gt;现视研&lt;/h3&gt;&lt;p&gt;巨细无遗的描述オタク的作品，不过演出最精彩的反而是三位女性角色了，好看。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/现视研.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;clannad(一期)&quot;&gt;clannad(一期)&lt;/h3&gt;&lt;p&gt;风子的电波实在太合我的胃口了，二期虽然血泪，个人还是更喜欢一期轻松温馨的校园生活。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/clannad.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;日常&quot;&gt;日常&lt;/h3&gt;&lt;p&gt;宅男品味大日常，电波一旦对上了就根本停不下来。京都作画水平充分体现的一部作品。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/日常.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;最终兵器彼女&quot;&gt;最终兵器彼女&lt;/h3&gt;&lt;p&gt;还未入宅时就最喜欢的私货，战争与爱情是永不过时的题材。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/最终兵器彼女.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;竹刀少女&quot;&gt;竹刀少女&lt;/h3&gt;&lt;p&gt;友情，努力，胜利，JUMP三要素，各位耍竹刀的少女实在是又帅又萌。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/竹刀少女.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;咲-SAKI&quot;&gt;咲-SAKI&lt;/h3&gt;&lt;p&gt;又萌又燃，天麻对我来说也不是简单的一部动画了，日麻还是给我带来了很多东西的，压轴也不为过吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/天麻.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; （三年前写的TOP20，补充几部这几年看过比较好的。高达00，圣母在上，京吹部，女子落语，touch，TT，月刊少女，邻座的怪同学，悠哉，飞跃巅峰1，还有幸运星不知道当时为什么没排进去）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;个人向，不公正，不客观，排名不分先后&lt;/p&gt;
&lt;h3 id=
    
    </summary>
    
      <category term="Anime" scheme="https://winry.me/categories/Anime/"/>
    
    
      <category term="京都动画" scheme="https://winry.me/tags/%E4%BA%AC%E9%83%BD%E5%8A%A8%E7%94%BB/"/>
    
      <category term="轻改" scheme="https://winry.me/tags/%E8%BD%BB%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>spring data jpa fetch mode</title>
    <link href="https://winry.me/2016/05/26/spring-data-jpa-fetch-mode/"/>
    <id>https://winry.me/2016/05/26/spring-data-jpa-fetch-mode/</id>
    <published>2016-05-25T16:00:00.000Z</published>
    <updated>2016-05-26T12:46:59.829Z</updated>
    
    <content type="html">&lt;p&gt;虽然hibernate里好几种fetch mode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SELECT&lt;/li&gt;
&lt;li&gt;SELECT with BatchSize&lt;/li&gt;
&lt;li&gt;JOIN&lt;/li&gt;
&lt;li&gt;SUBSELCT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是JPA里只有两种类型的fetching:&lt;code&gt;EAGER&lt;/code&gt;和&lt;code&gt;LAZY&lt;/code&gt;。在使用spring data jpa的时候，为了解决n+1查询问题，我们需要在查询中手动的控制fetch mode。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testPagedSpecificationProjection&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Specification&amp;lt;Person&amp;gt; spec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Specification&amp;lt;Person&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Predicate &lt;span class=&quot;title&quot;&gt;toPredicate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Root&amp;lt;Person&amp;gt; root, CriteriaQuery&amp;lt;?&amp;gt; query, CriteriaBuilder cb)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Long.class != query.getResultType()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    root.fetch(Person_.addresses);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cb.conjunction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Pageable pageable = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PageRequest(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Page&amp;lt;Person&amp;gt; page = personRepo.findAll(spec, pageable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第四行判断了返回类型是否为Long，是因为分页查询时spring data会先执行一次count查询，此时关联对count查询是没有意义的，会一个抛异常：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;org.hibernate.QueryException: query specified join fetching, but the owner of the fetched association was not present in the select list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果不是分页查询，则不需要判断返回类型。&lt;/p&gt;
&lt;p&gt;顺带一提，关于jpa里的@OneToOne关联，如果关联的表允许为空，即&lt;code&gt;optional=true&lt;/code&gt;，那么&lt;code&gt;fetch = FetchType.LAZY&lt;/code&gt;是不起作用的，具体的解释参考：&lt;a href=&quot;https://developer.jboss.org/wiki/SomeExplanationsOnLazyLoadingone-to-one&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SomeExplanationsOnLazyLoadingone-to-one&lt;/a&gt;。&lt;code&gt;@OneToOne&lt;/code&gt;的双向关联一定要慎用，一不小心就会造成n+1查询问题。&lt;/p&gt;
&lt;p&gt;参考:&lt;a href=&quot;https://jira.spring.io/browse/DATAJPA-105&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://jira.spring.io/browse/DATAJPA-105&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://jdpgrailsdev.github.io/blog/2014/09/09/spring_data_hibernate_join.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jdpgrailsdev.github.io/blog/2014/09/09/spring_data_hibernate_join.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;虽然hibernate里好几种fetch mode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SELECT&lt;/li&gt;
&lt;li&gt;SELECT with BatchSize&lt;/li&gt;
&lt;li&gt;JOIN&lt;/li&gt;
&lt;li&gt;SUBSELCT&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是JPA里只有两种类型的
    
    </summary>
    
    
      <category term="jpa" scheme="https://winry.me/tags/jpa/"/>
    
  </entry>
  
  <entry>
    <title>shiro登录</title>
    <link href="https://winry.me/2016/05/13/shiro-login/"/>
    <id>https://winry.me/2016/05/13/shiro-login/</id>
    <published>2016-05-12T16:00:00.000Z</published>
    <updated>2016-05-13T03:11:05.313Z</updated>
    
    <content type="html">&lt;p&gt;shiro默认的登录实现使用了用户名和密码进行验证。因为项目项目需要（使用了OAuth 2.0，不需要验证密码），改写了部分登录逻辑。在此记录一下主要用到的几个类。&lt;/p&gt;
&lt;p&gt;AuthorizingRealm是验证登录以及获取权限的核心类。这个类是个抽象类，有两个待实现的方法。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;AuthenticationInfo &lt;span class=&quot;title&quot;&gt;getAuthenticationInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AuthenticationToken token)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; AuthenticationException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;AuthorizationInfo &lt;span class=&quot;title&quot;&gt;doGetAuthorizationInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(PrincipalCollection principals)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们需要编写自己的Realm类继承这个抽象类并实现以上两个方法。&lt;code&gt;AuthenticationToken&lt;/code&gt;包括确认用户身份的信息（比如username），以及登录凭证信息（比如password）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AuthenticationInfo&lt;/code&gt;包括了登录凭证信息以及凭证信息的验证原则。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;AuthorizationInfo&lt;/code&gt;包括了用户的角色以及权限信息。&lt;/p&gt;
&lt;p&gt;需要注意的是AuthorizingRealm的父类里包含了要使用的&lt;code&gt;AuthenticationToken&lt;/code&gt;类信息，其值是shiro的默认实现，&lt;code&gt;UsernamePasswordToken.class&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果你要实现自己的token，必须重新注入&lt;code&gt;authenticationTokenClass&lt;/code&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;shiro默认的登录实现使用了用户名和密码进行验证。因为项目项目需要（使用了OAuth 2.0，不需要验证密码），改写了部分登录逻辑。在此记录一下主要用到的几个类。&lt;/p&gt;
&lt;p&gt;AuthorizingRealm是验证登录以及获取权限的核心类。这个类是个抽象类，有两个待实现
    
    </summary>
    
    
      <category term="shiro" scheme="https://winry.me/tags/shiro/"/>
    
  </entry>
  
  <entry>
    <title>宿題</title>
    <link href="https://winry.me/2016/05/07/nihongo-syukudai/"/>
    <id>https://winry.me/2016/05/07/nihongo-syukudai/</id>
    <published>2016-05-06T16:00:00.000Z</published>
    <updated>2016-08-02T12:15:06.804Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;那边那个穿蓝T恤的帅帅的男孩子不是我的男朋友&lt;/p&gt;
&lt;p&gt;あそこの青いTシャツを着ているハンセムな男の子は私の彼氏じゃないです。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你知道叶子老师最近胖了三公斤吗&lt;/p&gt;
&lt;p&gt;最近葉子先生が３キロ太ったのを知ってる？&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;妈妈走进房间的时候，看见熊猫君正在做广播体操。&lt;/p&gt;
&lt;p&gt;母が部屋に入った時，パンダ君が广播体操をしているのを見た。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我把叶子酱送给我的围巾弄丢了。&lt;/p&gt;
&lt;p&gt;葉子ちゃんにもらったマフラーを失くしました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;このマークはどう言う意味ですか&lt;/p&gt;
&lt;p&gt;その標識は左に曲がるなと言う意味です。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/mif4GpA.jpg&quot; alt=&quot;mif4GpA&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;地球太危险了，一起逃去火星吧&lt;/p&gt;
&lt;p&gt;地球は危ないですから、一緒に火星に逃げよう。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;请在以下句型中选择2~4个写一小段话，140字以内。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;～と、～。&lt;/li&gt;
&lt;li&gt;～（る）ことがある。&lt;/li&gt;
&lt;li&gt;～つもりだ。&lt;/li&gt;
&lt;li&gt;～（だ）そうだ。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;突然アイドルに夢中になることもあるんですよね。毎日アイドルの映像見ないと、眠れない。私はアイドルにあうのに日本へ行くつもりだ、でも今年は無理だそうだ。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为了去日本旅游，我要提前学好日语&lt;/p&gt;
&lt;p&gt;日本へ旅行するために、日本語を勉強しておきます。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AKB48的海报我放在柜子里了，你待会帮我送到森那里。&lt;/p&gt;
&lt;p&gt;AKB48のポスターがロッカーに入ってあります、後で森さんに送って下さい。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这个平底锅只有在日本有卖，在中国买不到。&lt;/p&gt;
&lt;p&gt;このフライパンは日本でしか売っでいなくて、中国で買うことができない。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;请给我介绍一款拍猫好的相机。&lt;/p&gt;
&lt;p&gt;猫を撮るのにいいカメラを紹介して下さい。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你知不知道森明天能不能来。&lt;/p&gt;
&lt;p&gt;森さんが明日来られるかどうかしてる？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果森不能来的话，就请小李来吧。&lt;/p&gt;
&lt;p&gt;もし森さんが来られないなら、李さんに来てもらいましょう。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;息子：我去趟便利店&lt;/p&gt;
&lt;p&gt;母：好像要下雨了，带上伞去。&lt;/p&gt;
&lt;p&gt;コンビニに行ってくる。&lt;/p&gt;
&lt;p&gt;雨が降りそうで、傘を持って行って。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;因为地震，刚建好的大楼倒塌了。&lt;/p&gt;
&lt;p&gt;地震のために、できたばかりのビルが倒れた。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;刚买的_手办被弟弟弄坏了，我现在正要去揍他。&lt;/p&gt;
&lt;p&gt;最近買ったばがりフィギュアは弟に壊されて、今彼を殴りに行くところです。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A:小李穿着拖鞋就来公司上班了。&lt;/p&gt;
&lt;p&gt;李さんはスリッパを履いたまま会社にきった。&lt;/p&gt;
&lt;p&gt;B:小李是个认真的人，不可能做那样的事。&lt;/p&gt;
&lt;p&gt;李さんは真面目なひとだから、そなことをするはずない。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用~すぎる结构造句&lt;br&gt;ぱるるは可愛い過ぎて、会いたかった。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用使役态造句&lt;br&gt;姉さんは僕にアイスを買わせました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;她好像被老妈逼着去相亲（お見合い）了。&lt;br&gt;彼はお母さんにお見合われさせました。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;日语的发音很好听，日本的文化我也很喜欢，所以今后我会一直学习下去。&lt;br&gt;日本語の発音が綺麗だし、文化も好きだし、これからずっと勉強していこうと思います。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;我想成为像A一样B的人。&lt;br&gt;ぱるるのような自由なひとになりたい。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;那边那个穿蓝T恤的帅帅的男孩子不是我的男朋友&lt;/p&gt;
&lt;p&gt;あそこの青いTシャツを着ているハンセムな男の子は私の彼氏じゃないです。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你知道叶子老师最近胖了三公斤吗&lt;/p&gt;
&lt;p&gt;最近葉子先生が３キロ太
    
    </summary>
    
    
      <category term="日本語" scheme="https://winry.me/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>raft（未完）</title>
    <link href="https://winry.me/2016/04/26/raft-protocol/"/>
    <id>https://winry.me/2016/04/26/raft-protocol/</id>
    <published>2016-04-25T16:00:00.000Z</published>
    <updated>2016-05-07T11:37:54.428Z</updated>
    
    <content type="html">&lt;h4 id=&quot;5-1_基本概念&quot;&gt;5.1 基本概念&lt;/h4&gt;&lt;p&gt;​    一个Raft集群包括几个节点。五是一个典型的数量，这个数量使系统能够容错两次。每个节点在任何时候都处于以下三种状态之一：leader,follower,或candidate。运行正常的情况下，集群中有一个leader，其他节点都是followers。follower是被动的：它们不主动发起请求，只会响应来自leader或candidate的请求。leader处理所有的客户端请求（如果一个客户端与follower通讯，那么follower将转发请求给leader）。第三种状态，candidate，用于选举leader，选举将在5.2节详细说明。图例4展示了三种状态以及它们之间的转换，接下来就讨论状态之间的转换。&lt;/p&gt;
&lt;p&gt;​    Raft被分割为不定长的terms。terms用连续的整数来编号。每个term从选举开始，选举中candidates将试图成为leader。如果一个candidate赢得了选举，那么该term剩下的时间中它将作为leader存在。某些情形下，选举会以分票告终。这种情况下，该term没有leader，一个新的term会马上开始。Raft确保每个term最多只有一个leader。&lt;/p&gt;
&lt;p&gt;​    不同的节点可能在不同的时间点察觉到term的转换，在某些情况下，一个节点不会察觉到某次选举甚至整个term。term在Raft中起到扮演逻辑计时器的角色，它使各个节点能检测到过时的信息，比如过期的leader。每个节点都会存储current term，这个值会随着时间递增。节点之间通讯时会交换current terms信息，如果一个节点的current term小于其他人的，它会把它更新为较大的那个值。如果一个candidate或者leader发现它的term已经过时，它将立刻转为follower。如果一个节点接收到的请求包含了过时的term，它会拒绝该请求。&lt;/p&gt;
&lt;p&gt;​    Raft节点之间通过远程过程调用（RPCs）通讯，最基本的一致性算法只需要两种类型的RPCs。RequestVote RPCs 在选举期间由candidates发起，Append-Entries RPCs 由leader发起，用于复制log，或者模拟心跳。第7节增加了第三种PRCs用于节点之间交换快照。如果没有收到响应，节点会及时的重试RPCs。为了更好的性能，RPCs将并行的进行。&lt;/p&gt;
&lt;h4 id=&quot;5-2选举&quot;&gt;5.2选举&lt;/h4&gt;&lt;p&gt;​    Raft使用心跳机制来触发选举。节点启动之后，初始状态是followers。只要节点持续的收到来自leader或candidate的合法RPCs，它会一直保持follower的状态。Leaders周期性的发送心跳（不带leg entries的AppendEntries RPCs）来维持状态。如果一个follower一段时间没有收到请求，那么会发生选举超时，节点假定现在没有可用的leader，并开始选举一个新的leader。&lt;/p&gt;
&lt;p&gt;​    当选举开始时，follower将term加一并转为candidate状态。然后它为自己投票并并行的向集群中的节点发起RequestVote RPCs。candidate保持其状态直到以下三种情况之一发生：(a)赢得选举，(b)其他节点声明自己是leader，(c)一段时间过去了而没有人胜出。以上三种结果会在下面的篇幅中分别讨论。&lt;/p&gt;
&lt;p&gt;​    如果candidate收到集群中大部分节点相同term的投票，那么它将赢得选举。一个节点在一个term中最多只投一次票，按照先到先得的原则。多数票胜出原则保证了一个term当中最多只有一个candidate能赢得选举。一旦candidate赢得了选举，它的状态将转为leader。接着它会向其他节点发送心跳来防止新的选举。&lt;/p&gt;
&lt;p&gt;​    等待投票的过程中，candidate可能会受到其他节点的AppendEntries RPC表示自己是leader。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;5-1_基本概念&quot;&gt;5.1 基本概念&lt;/h4&gt;&lt;p&gt;​    一个Raft集群包括几个节点。五是一个典型的数量，这个数量使系统能够容错两次。每个节点在任何时候都处于以下三种状态之一：leader,follower,或candidate。运行正常的情况下，集群中有一
    
    </summary>
    
    
      <category term="一致性协议" scheme="https://winry.me/tags/%E4%B8%80%E8%87%B4%E6%80%A7%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>b站登陆以及发弹幕</title>
    <link href="https://winry.me/2016/03/23/b%E7%AB%99%E7%99%BB%E9%99%86%E4%BB%A5%E5%8F%8A%E5%8F%91%E5%BC%B9%E5%B9%95/"/>
    <id>https://winry.me/2016/03/23/b站登陆以及发弹幕/</id>
    <published>2016-03-22T16:00:00.000Z</published>
    <updated>2016-03-23T17:00:04.318Z</updated>
    
    <content type="html">&lt;p&gt;本文只说明不使用验证码的登录，使用验证码的也是大同小异，打开B站F12然后登录，看一下HTTP报文就知道了。&lt;/p&gt;
&lt;h2 id=&quot;登录&quot;&gt;登录&lt;/h2&gt;&lt;p&gt;登录密码需要加密（不过经测试，明文也是能登录的，如果用明文登录请跳至第三步），用的是RSA加密算法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先要获取公钥：&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:https&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;://passport&lt;/span&gt;.bilibili.com/login?act=getkey&amp;amp;_= + 当前时间&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;返回的json类似这个样子：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&quot;&lt;span class=&quot;attribute&quot;&gt;hash&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;4d656f543748e605&quot;&lt;/span&gt;&lt;/span&gt;,&quot;&lt;span class=&quot;attribute&quot;&gt;key&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCdScM09sZJqFPX7bvmB2y6i08J\nbHsa0v4THafPbJN9NoaZ9Djz1LmeLkVlmWx1DwgHVW+K7LVWT5FV3johacVRuV98\n37+RNntEK6SE82MPcl7fA++dmW2cLlAjsIIkrX+aIvvSGCuUfcWpWFy3YVDqhuHr\nNDjdNcaefJIQHMW+sQIDAQAB\n-----END PUBLIC KEY-----\n&quot;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;把hash值加到你的密码前面，然后用公钥加密。注意公钥是Base64编码过的，去掉头尾和换行之后要先解码。同样的，公钥加密之后的密文也要经过Base64编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;登录请求：&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:https&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;://passport&lt;/span&gt;.bilibili.com/ajax/miniLogin/login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;随之还要提交一个表单，有四个字段。&lt;br&gt;“userid=用户名&amp;amp;pwd=密码&amp;amp;captcha=验证码&amp;amp;keep=是否保持登录状态”&lt;br&gt;验证码填空就行，keep填1为是，0为否。&lt;br&gt;登录成功后，返回的json:&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&quot;&lt;span class=&quot;attribute&quot;&gt;status&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;,&quot;&lt;span class=&quot;attribute&quot;&gt;ts&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1458750856&lt;/span&gt;&lt;/span&gt;,&quot;&lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&amp;#123;&quot;&lt;span class=&quot;attribute&quot;&gt;code&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;,&quot;&lt;span class=&quot;attribute&quot;&gt;crossDomain&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;https://passport.bilibili.com/crossDomain?DedeUserID=241087&amp;amp;DedeUserID__ckMd5=7e772bf49d639da6&amp;amp;Expires=1800&amp;amp;SESSDATA=ed6f17cd%2C1458837256%2C7cd89c4f&amp;amp;gourl=https%3A%2F%2Fpassport.bilibili.com%2Fajax%2FminiLogin%2Fredirect&quot;&lt;/span&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;crossDomain包含了你的cookie信息。这个信息是必须的，在发弹幕时需要用到，否则会提示你需要登录。&lt;br&gt;把DedeUserID，DedeUserID__ckMd5，SESSDATA三个值保存下来就行了。&lt;/p&gt;
&lt;h2 id=&quot;发弹幕&quot;&gt;发弹幕&lt;/h2&gt;&lt;p&gt;发弹幕的请求：&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:http&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;://live&lt;/span&gt;.bilibili.com/msg/send&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要提交表单，有六个字段。&lt;br&gt;“color=颜色&amp;amp;fontSize=字体大小&amp;amp;mode=模式&amp;amp;msg=内容&amp;amp;rnd=时间&amp;amp;roomId=房间号”&lt;br&gt;颜色填固定值16777215，字体大小25，mode填1。&lt;br&gt;注意把你的Cookie添加到你的http header里去。&lt;br&gt;形如：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Cookie: DedeUserID=&lt;span class=&quot;number&quot;&gt;241087&lt;/span&gt;; DedeUserID__ckMd5=&lt;span class=&quot;number&quot;&gt;7e772&lt;/span&gt;bf49d639da6; SESSDATA=ed6f17cd%&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C1458751426%&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;C14f99d59;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;成功返回的json:&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&quot;&lt;span class=&quot;attribute&quot;&gt;code&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;,&quot;&lt;span class=&quot;attribute&quot;&gt;msg&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;,&quot;&lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;&quot;:&lt;span class=&quot;value&quot;&gt;[]&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;能够模拟登陆之后，能够调用的API就很多了，发弹幕只是其中一个简单的例子，剩下的就自己尝试吧w。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文只说明不使用验证码的登录，使用验证码的也是大同小异，打开B站F12然后登录，看一下HTTP报文就知道了。&lt;/p&gt;
&lt;h2 id=&quot;登录&quot;&gt;登录&lt;/h2&gt;&lt;p&gt;登录密码需要加密（不过经测试，明文也是能登录的，如果用明文登录请跳至第三步），用的是RSA加密算法。&lt;/p&gt;
&lt;
    
    </summary>
    
    
      <category term="bilibili" scheme="https://winry.me/tags/bilibili/"/>
    
      <category term="http" scheme="https://winry.me/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>win常用软件</title>
    <link href="https://winry.me/2016/03/16/win%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    <id>https://winry.me/2016/03/16/win常用软件/</id>
    <published>2016-03-15T16:00:00.000Z</published>
    <updated>2016-07-28T07:56:48.000Z</updated>
    
    <content type="html">&lt;p&gt;自己常用的windows软件列表。&lt;/p&gt;
&lt;h4 id=&quot;editor&quot;&gt;editor&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Notepad2-mod&lt;/li&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;Typora&lt;/li&gt;
&lt;li&gt;Sublime&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;sync&quot;&gt;sync&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Dropbox&lt;/li&gt;
&lt;li&gt;坚果云&lt;/li&gt;
&lt;li&gt;Seafile&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;im&quot;&gt;im&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;QQLite&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;reader&quot;&gt;reader&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;SumatraPDF&lt;/li&gt;
&lt;li&gt;Picassa&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;recoder&quot;&gt;recoder&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Bandicm&lt;/li&gt;
&lt;li&gt;LICEcap&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;dowanload&quot;&gt;dowanload&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;EagleGet&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;shell&quot;&gt;shell&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Babun&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;tunnel&quot;&gt;tunnel&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Ngrok&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;wireshark&quot;&gt;wireshark&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Fiddler&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;proxy&quot;&gt;proxy&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;ShadowSocks&lt;/li&gt;
&lt;li&gt;Lantern&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ssh&quot;&gt;ssh&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;PuTTY&lt;/li&gt;
&lt;li&gt;WinSCP&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;mail&quot;&gt;mail&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;FoxMail&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;office&quot;&gt;office&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;LibreOffice&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;file&quot;&gt;file&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Everything&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;自己常用的windows软件列表。&lt;/p&gt;
&lt;h4 id=&quot;editor&quot;&gt;editor&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Notepad2-mod&lt;/li&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;Typora&lt;/li&gt;
&lt;li&gt;Sublime&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;
    
    </summary>
    
    
      <category term="windows" scheme="https://winry.me/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Using and Currying in Java</title>
    <link href="https://winry.me/2016/03/09/using-and-currying-in-java/"/>
    <id>https://winry.me/2016/03/09/using-and-currying-in-java/</id>
    <published>2016-03-08T16:00:00.000Z</published>
    <updated>2016-03-09T15:37:06.838Z</updated>
    
    <content type="html">&lt;p&gt;C#里面有一个常用的关键字using,它可以保证资源在使用完毕后被正常关闭,使得程序员不必手动的关闭资源.&lt;br&gt;use using:&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; (Font font1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Font(&lt;span class=&quot;string&quot;&gt;&quot;Arial&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10.0f&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  byte charset = font1.GdiCharSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;without using:&lt;br&gt;&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Font font1 = new Font&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Arial&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10.0&lt;/span&gt;f)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    byte charset = font1.GdiCharSet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  finally&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if &lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;font1&lt;/span&gt; != null)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;IDisposable&lt;/span&gt;)&lt;/span&gt;font1)&lt;/span&gt;.Dispose&lt;span class=&quot;list&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;java 7以后java里也有了类似的特性。如果一个类实现了java.lang.AutoCloseable，那么你可以使用如下的语法。&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;try&lt;/span&gt;(ClassImplementingAutoCloseable obj = new &lt;span class=&quot;function&quot;&gt;ClassImplementingAutoCloseable&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来介绍如果一个类没有实现AutoCloseable，而又想实现类似using的功能应该怎么做。&lt;br&gt;MyFile是一个在使用之后需要被关闭的资源(需要调用close方法)。&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class MyFile &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; fileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MyFile(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; fileName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fileName = fileName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; close() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;closing file:&quot;&lt;/span&gt; + fileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fileName:&quot;&lt;/span&gt; + fileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;MyFileHelper是MyFile的一个工具类。&lt;br&gt;currier接收第一个参数myFile，返回一个&lt;code&gt;Consumer&amp;lt;Consumer&amp;lt;MyFile&amp;gt;&amp;gt;&lt;/code&gt;。&lt;br&gt;意思是这个consumer接收另外一个consumer作为参数（另外这个consumer才会真正的消费myFile）。&lt;br&gt;在currier的第二个参数被应用之前，它是不知道myFile会如何被消费的。&lt;br&gt;当然你也可以把consumer换成function，资源消费之后再产生一个结果。&lt;br&gt;这里用到了&lt;a href=&quot;https://en.wikipedia.org/wiki/Currying&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Currying&lt;/a&gt;，Currying是在函数式语言中接收单参数的函数模拟多参数的函数的技术。&lt;br&gt;使用Currying让它在语法上它更接近using，把资源的初始化和资源的处理分开。&lt;br&gt;同时，consumer和myfile两个参数能够在不同的地方被确定，它们可以被互相隔离的测试。&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFileHelper&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Consumer&amp;lt;Consumer&amp;lt;MyFile&amp;gt;&amp;gt; using(MyFile file) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Function&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;MyFile&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Consumer&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;MyFile&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; &lt;span class=&quot;title&quot;&gt;currier&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;myFile&lt;/span&gt; -&amp;gt; &lt;span class=&quot;title&quot;&gt;consumer&lt;/span&gt; -&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        consumer.accept(myFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          myFile.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Consumer&amp;lt;Consumer&amp;lt;MyFile&amp;gt;&amp;gt; curried = currier.apply(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; curried;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后是测试代码。&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  MyFileHelper.&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyFile(&lt;span class=&quot;string&quot;&gt;&quot;my-file&quot;&lt;/span&gt;)).accept(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    myFile -&amp;gt; myFile.print());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出:&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fileName:&lt;span class=&quot;keyword&quot;&gt;my&lt;/span&gt;-&lt;span class=&quot;type&quot;&gt;file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;closing &lt;span class=&quot;type&quot;&gt;file&lt;/span&gt;:&lt;span class=&quot;keyword&quot;&gt;my&lt;/span&gt;-&lt;span class=&quot;type&quot;&gt;file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;完整的代码可以在这里看到：&lt;br&gt;&lt;a href=&quot;https://gist.github.com/fwrq41251/f6b82e201ff3b63d11ca&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gist&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;C#里面有一个常用的关键字using,它可以保证资源在使用完毕后被正常关闭,使得程序员不必手动的关闭资源.&lt;br&gt;use using:&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="Java 8" scheme="https://winry.me/tags/Java-8/"/>
    
      <category term="currying" scheme="https://winry.me/tags/currying/"/>
    
      <category term="using" scheme="https://winry.me/tags/using/"/>
    
  </entry>
  
  <entry>
    <title>Pattern matching in Java(续)</title>
    <link href="https://winry.me/2015/11/30/pattern-matching-in-java(%E7%BB%AD)/"/>
    <id>https://winry.me/2015/11/30/pattern-matching-in-java(续)/</id>
    <published>2015-11-29T16:00:00.000Z</published>
    <updated>2016-03-09T15:38:54.700Z</updated>
    
    <content type="html">&lt;p&gt;上一篇文章里翻译了java8以前模式匹配在java中的使用情况.&lt;br&gt;这一篇文章会简单介绍cyclops库中模式匹配的相关内容.&lt;br&gt;&lt;a href=&quot;https://github.com/aol/cyclops&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cyclops&lt;/a&gt;是基于java8的一个扩展库,包括了模式匹配,stream工具类,monad,元组等内容.&lt;/p&gt;
&lt;p&gt;直接上完整的代码.handleByType方法匹配类型,handleByValue方法匹配值.&lt;br&gt;isType方法传入一个名为TypedFunction的函数式接口,这个接口里有一个默认方法可以获取lanbda表达式中的泛型具体类型.&lt;br&gt;需要注意的是当需要值匹配时必须重写类的equals方法,因为Object中的equals方法认为两个不同的对象是不相等的.&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package org.gradle.pattern;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.junit.Test;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.aol.cyclops.matcher.builders.Matching;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Patterns&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	abstract &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public Bar(Integer bar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar = bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		private Integer bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public Integer getBar() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; setBar(Integer bar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar = bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public Baz(String baz) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baz = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		private String baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public String getBaz() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; setBaz(String baz) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baz = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;property&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public int hashCode() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			final int prime = &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			int result = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			result = prime * result + getOuterType().hashCode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			result = prime * result + ((baz == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : baz.hashCode());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;property&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		public boolean equals(Object obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; == obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (getClass() != obj.getClass())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			Baz other = (Baz) obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!getOuterType().equals(other.getOuterType()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (baz == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (other.baz != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!baz.equals(other.baz))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		private Patterns getOuterType() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Patterns.&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Object handleByType(Foo foo) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Matching&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;((Bar bar) -&amp;gt; bar.getBar())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;title&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;isType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;((Baz baz) -&amp;gt; baz.getBaz())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(foo)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;title&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleByValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Foo foo)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;title&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Matching&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;title&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;isValue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Baz(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;))&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;thenApply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(baz -&amp;gt; baz.getBaz())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(foo)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				.&lt;span class=&quot;title&quot;&gt;orElse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;match nothing&quot;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	@&lt;span class=&quot;title&quot;&gt;Test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;title&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;title&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(handleByType(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bar(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;)))&lt;/span&gt;;          // 42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;title&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(handleByType(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Baz(&lt;span class=&quot;string&quot;&gt;&quot;letty&quot;&lt;/span&gt;)))&lt;/span&gt;;     // &lt;span class=&quot;title&quot;&gt;letty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;title&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(handleByValue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Baz(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;)))&lt;/span&gt;; // &lt;span class=&quot;title&quot;&gt;Luhrmann&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;title&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;out&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(handleByValue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Baz(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)))&lt;/span&gt;;         // &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;nothing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;虽然和scala中的guard和case class相比,java中的模式匹配还是不够灵活,&lt;br&gt;然而这毕竟缺少了语言层面的支持.尽管如此,使用cyclops还是比起用访问者模式&lt;br&gt;在可读性和实现的难易度上都大大进步了.&lt;br&gt;预告:下一篇博客可能会继续介绍cyclops,或者是和动静态语言相关的内容.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇文章里翻译了java8以前模式匹配在java中的使用情况.&lt;br&gt;这一篇文章会简单介绍cyclops库中模式匹配的相关内容.&lt;br&gt;&lt;a href=&quot;https://github.com/aol/cyclops&quot; target=&quot;_blank&quot; rel=&quot;extern
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="Java 8" scheme="https://winry.me/tags/Java-8/"/>
    
      <category term="pattern-matching" scheme="https://winry.me/tags/pattern-matching/"/>
    
  </entry>
  
  <entry>
    <title>Pattern matching in Java(翻译)</title>
    <link href="https://winry.me/2015/11/04/pattern-matching-in-java/"/>
    <id>https://winry.me/2015/11/04/pattern-matching-in-java/</id>
    <published>2015-11-03T16:00:00.000Z</published>
    <updated>2016-03-09T15:39:13.832Z</updated>
    
    <content type="html">&lt;p&gt;模式匹配是一种来源于函数式语言的特性,它有点像java中的switch,&lt;br&gt;然而比switch更加强大,它除了能对值进行匹配之外还能对类型进行匹配.&lt;br&gt;配合scala的模板类,它能写出非常简洁的类型、值匹配的代码.&lt;br&gt;当你需要根据对象的类型或者值的不同来进行不同的逻辑处理时,就应该使用模式匹配.&lt;br&gt;下面的内容将主要针对其中的&lt;strong&gt;类型&lt;/strong&gt;匹配展开.&lt;/p&gt;
&lt;h3 id=&quot;scala中的模式匹配&quot;&gt;scala中的模式匹配&lt;/h3&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;patterns&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt;(&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt;(&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handle&lt;/span&gt;(&lt;/span&gt;f: &lt;span class=&quot;type&quot;&gt;Foo&lt;/span&gt;) =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f &lt;span class=&quot;keyword&quot;&gt;match&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; b: &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt; =&amp;gt; b.bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; b: &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt; =&amp;gt; b.baz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;))                       &lt;span class=&quot;comment&quot;&gt;//&amp;gt; res0: Any = 42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;))               &lt;span class=&quot;comment&quot;&gt;//&amp;gt; res1: Any = Luhrmann&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面定义了一个抽象类Foo和两个子类Bar,Baz(object关键字说明这个类是单例的),&lt;br&gt;两个子类各有一个名称与类型都不同的成员属性,另外有一个handle方法来处理子类对象.&lt;br&gt;scala具有类型推导,所以这里没有声明方法的返回类型.&lt;/p&gt;
&lt;h3 id=&quot;java中的做法&quot;&gt;java中的做法&lt;/h3&gt;&lt;h4 id=&quot;instanceof&quot;&gt;instanceof&lt;/h4&gt;&lt;p&gt;简单的做法是使用instanceof&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BadFoo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BadFoo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(int bar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar = bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BadFoo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; baz) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baz = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static void handle(&lt;span class=&quot;type&quot;&gt;BadFoo&lt;/span&gt; f) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f instanceof &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt; b = (&lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;) f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;string&quot;&gt;&quot;I have &quot;&lt;/span&gt; + b.bar + &lt;span class=&quot;string&quot;&gt;&quot; bars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f instanceof &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt; b = (&lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;) f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;string&quot;&gt;&quot;I have the &quot;&lt;/span&gt; + b.baz + &lt;span class=&quot;string&quot;&gt;&quot; baz&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public static void main(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然而这么写有几个问题,1.在那些使用动态代理的代码中,产生的对象永远不会是原始类的一个实例,&lt;br&gt;instanceof不起作用.2.无法在编译时期进行类型判断,&lt;code&gt;if (f instanceof Bar) Baz b = (Baz) f;&lt;/code&gt;&lt;br&gt;以上代码能编译通过,但是不能运行.3.当增加了一个新的子类时,不能保证旧代码被及时更新.&lt;/p&gt;
&lt;h4 id=&quot;Moving_logic_into_the_class&quot;&gt;Moving logic into the class&lt;/h4&gt;&lt;p&gt;另一种做法是把逻辑放到数据对象中,就像OOP应该做的.&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OoFoo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; void handle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OoFoo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; int bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(int bar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar = bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void handle() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;string&quot;&gt;&quot;I have &quot;&lt;/span&gt; + bar + &lt;span class=&quot;string&quot;&gt;&quot; bars&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OoFoo&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; baz) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baz = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void handle() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;string&quot;&gt;&quot;I have the &quot;&lt;/span&gt; + baz + &lt;span class=&quot;string&quot;&gt;&quot; baz&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public static void main(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;).handle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;).handle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这么做刚开始还不错,然而当类似的方法逐渐变多,你的数据对象就变成了存放业务逻辑的地方.&lt;br&gt;使用访问者模式能够保持数据对象简单,把业务逻辑放到响应的处理类中.&lt;/p&gt;
&lt;h3 id=&quot;访问者模式&quot;&gt;访问者模式&lt;/h3&gt;&lt;h4 id=&quot;Basic_Visitor&quot;&gt;Basic Visitor&lt;/h4&gt;&lt;p&gt;基本的访问者模式包括以下内容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个抽象类或者接口包括一个以Visitor作为参数,返回类型为Visitor中泛型类型的方法match&lt;/li&gt;
&lt;li&gt;一个Visitor类,包括各个子类对象为参数的case方法&lt;/li&gt;
&lt;li&gt;一系列实现了match方法的子类&lt;/li&gt;
&lt;li&gt;实现各个case方法的应用代码&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Visitor&amp;lt;T&amp;gt; visitor)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Visitor&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bar b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseBaz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Baz b)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bar)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar = bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Visitor&amp;lt;T&amp;gt; visitor)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; visitor.caseBar(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String baz)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baz = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Visitor&amp;lt;T&amp;gt; visitor)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; visitor.caseBaz(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Foo f)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(f.match(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Visitor&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bar b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I have &quot;&lt;/span&gt; + b.bar + &lt;span class=&quot;string&quot;&gt;&quot; bars&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;caseBaz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Baz b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I have the &quot;&lt;/span&gt; + b.baz + &lt;span class=&quot;string&quot;&gt;&quot; baz&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bar(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Baz(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Default_visitor&quot;&gt;Default visitor&lt;/h4&gt;&lt;p&gt;有时候Visitor没必要重写全部的case方法,只重写部分方法,其他时候返回默认值.&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DefaultFooVisitor&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Visitor&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  T defaultValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DefaultFooVisitor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T defaultValue)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.defaultValue = defaultValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bar b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; defaultValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseBaz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Baz b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; defaultValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;countBars&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Foo f)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; f.&lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DefaultFooVisitor&amp;lt;Integer&amp;gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Integer &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bar b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; b.bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;缺点是当增加了新的子类,新增的case方法可能会忘记重写.&lt;br&gt;解决这个问题的一种方法是先把DefaultFooVisitor中新增的case方法改为抽象的,&lt;br&gt;解决了所有的编译问题之后再来实现DefaultFooVisitor中新增的case方法.&lt;/p&gt;
&lt;h4 id=&quot;Void_or_Unit_return_values&quot;&gt;Void or Unit return values&lt;/h4&gt;&lt;p&gt;有时候返回值是不需要的,可以用&lt;code&gt;Unit.unit&lt;/code&gt;或者&lt;code&gt;java.lang.Void&lt;/code&gt;来表达空的返回类型.&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PartitionFoos&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doStuff&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Collection&amp;lt;Foo&amp;gt; foos)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;Bar&amp;gt; bars = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; List&amp;lt;Baz&amp;gt; bazes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Foo f : foos) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      f.match(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Visitor&amp;lt;Void&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Void &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bar b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          bars.add(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Void &lt;span class=&quot;title&quot;&gt;caseBaz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Baz b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          bazes.add(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;解构模式匹配&quot;&gt;解构模式匹配&lt;/h3&gt;&lt;p&gt;前面的例子都只包含了类型匹配,最后的一个例子会展示java处理包含类型以及值匹配的方法.&lt;br&gt;先来看一下scala的代码:&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;patterns&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt;(&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt;(&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handle&lt;/span&gt;(&lt;/span&gt;f: &lt;span class=&quot;type&quot;&gt;Foo&lt;/span&gt;) =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    f &lt;span class=&quot;keyword&quot;&gt;match&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(i) &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) =&amp;gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(i) =&amp;gt; i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(s) =&amp;gt; s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;))                             &lt;span class=&quot;comment&quot;&gt;//&amp;gt; res0: Any = 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bar&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;))                              &lt;span class=&quot;comment&quot;&gt;//&amp;gt; res0: Any = 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Baz&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;))                     &lt;span class=&quot;comment&quot;&gt;//&amp;gt; res1: Any = Luhrmann&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;简洁,灵活.再来看一下java版本的:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Visitor&amp;lt;T&amp;gt; visitor)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Visitor&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseManyBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;caseBaz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bar)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar = bar;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Visitor&amp;lt;T&amp;gt; visitor)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bar &amp;gt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; ? visitor.caseManyBar() : visitor.caseBar(bar);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Foo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Baz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String baz)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.baz = baz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;T&amp;gt; &lt;span class=&quot;function&quot;&gt;T &lt;span class=&quot;title&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Visitor&amp;lt;T&amp;gt; visitor)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; visitor.caseBaz(baz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Foo f)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(f.match(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Visitor&amp;lt;String&amp;gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;caseBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I have &quot;&lt;/span&gt; + i + &lt;span class=&quot;string&quot;&gt;&quot; bars&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;caseManyBar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I have many bars&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;caseBaz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;I have the &quot;&lt;/span&gt; + s + &lt;span class=&quot;string&quot;&gt;&quot; baz&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bar(&lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bar(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handle(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Baz(&lt;span class=&quot;string&quot;&gt;&quot;Luhrmann&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;16vs58,很难说用多余的42行来模拟相同的功能是否值得.&lt;br&gt;访问者模式的好处是,让你以一种类型安全的方式来处理子类.&lt;br&gt;在你添加新的子类时,编译器会告诉你哪些代码需要修改.&lt;br&gt;当你下一次遇到ClassCastException时你应该考虑使用它.&lt;/p&gt;
&lt;p&gt;原文:&lt;br&gt;&lt;a href=&quot;http://eng.wealthfront.com/2015/02/pattern-matching-in-java-with-visitor.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pattern matching in Java with the Visitor pattern&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;模式匹配是一种来源于函数式语言的特性,它有点像java中的switch,&lt;br&gt;然而比switch更加强大,它除了能对值进行匹配之外还能对类型进行匹配.&lt;br&gt;配合scala的模板类,它能写出非常简洁的类型、值匹配的代码.&lt;br&gt;当你需要根据对象的类型或者值的不同来进行不同
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="Functional Programming" scheme="https://winry.me/tags/Functional-Programming/"/>
    
      <category term="pattern-matching" scheme="https://winry.me/tags/pattern-matching/"/>
    
      <category term="visitor pattern" scheme="https://winry.me/tags/visitor-pattern/"/>
    
  </entry>
  
  <entry>
    <title>java内存探险(待续)</title>
    <link href="https://winry.me/2015/10/13/java%E5%86%85%E5%AD%98%E6%8E%A2%E9%99%A9/"/>
    <id>https://winry.me/2015/10/13/java内存探险/</id>
    <published>2015-10-12T16:00:00.000Z</published>
    <updated>2016-02-15T14:44:56.565Z</updated>
    
    <content type="html">&lt;p&gt;之前写的b站直播订阅通知的程序内存占用始终不能满意,&lt;br&gt;想到java是跑在jvm上的,&lt;br&gt;是否jvm本身就需要占用那么多的内存呢,&lt;br&gt;决定打开jconsole来看一看.&lt;br&gt;java内存分为堆和非堆,来看定义:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h5 id=&quot;Heap_memory&quot;&gt;Heap memory&lt;/h5&gt;&lt;p&gt;The heap memory is the runtime data area from which the Java VM allocates memory for all class instances and arrays. The heap may be of a fixed or variable size. The garbage collector is an automatic memory management system that reclaims heap memory for objects.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Eden Space: The pool from which memory is initially allocated for most objects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Survivor Space: The pool containing objects that have survived the garbage collection of the Eden space.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tenured Generation: The pool containing objects that have existed for some time in the survivor space.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;Non-heap_memory&quot;&gt;Non-heap memory&lt;/h5&gt;&lt;p&gt;Non-heap memory includes a method area shared among all threads and memory required for the internal processing or optimization for the Java VM. It stores per-class structures such as a runtime constant pool, field and method data, and the code for methods and constructors. The method area is logically part of the heap but, depending on the implementation, a Java VM may not garbage collect or compact it. Like the heap memory, the method area may be of a fixed or variable size. The memory for the method area does not need to be contiguous.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Permanent Generation: The pool containing all the reflective data of the virtual machine itself, such as class and method objects. With Java VMs that use class data sharing, this generation is divided into read-only and read-write areas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code Cache: The HotSpot Java VM also includes a code cache, containing memory that is used for compilation and storage of native code.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的程序的堆内存占用:&lt;br&gt;&lt;img src=&quot;/img/561cad5c33358.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;这个程序每五分钟会去爬一次直播间的直播状态,&lt;br&gt;在这个点上堆内存占用升高,&lt;br&gt;GC之后又回落下来,&lt;br&gt;整体上在6.5M左右徘徊,&lt;br&gt;问题不大.&lt;br&gt;再来看非堆:&lt;br&gt;&lt;img src=&quot;/img/561cae38326d2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;整体30M左右,基本上不变化.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;实际上JAVA程序在启动时可以指定内存占用的大小,&lt;br&gt;&lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;deletion&quot;&gt;-Xms128m -Xmx256m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这行代码就指定了堆的初始化内存为128MB,最大为256MB.&lt;br&gt;&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt;&lt;span class=&quot;constant&quot;&gt;XX&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:PermSize256m&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;XX&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:MaxPermSize512m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面这行代码用来指定非堆内存的永久代(&lt;strong&gt;PermGen&lt;/strong&gt;)大小.&lt;br&gt;然而我试过将MaxPermSize设为20m,&lt;br&gt;非堆内存占用并没有什么变化.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;手头上还有一个舰娘的辅助程序,从github上下载的,&lt;br&gt;来看一下它的内存占用.&lt;br&gt;堆内存:&lt;br&gt;&lt;img src=&quot;/img/561cb1413c8a5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;非堆:&lt;br&gt;&lt;img src=&quot;/img/561cb18c012a9.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;非堆几乎是一样的.&lt;/p&gt;
&lt;p&gt;这下可以安心了,自己的程序内存占用是正常的.&lt;br&gt;参考:&lt;br&gt;&lt;a href=&quot;https://docs.oracle.com/cd/E22289_01/html/821-1274/configuring-the-default-jvm-and-java-arguments.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Configuring JVM Options&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1493913/how-to-set-the-maximum-memory-usage-for-jvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to set the maximum memory usage for JVM&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前写的b站直播订阅通知的程序内存占用始终不能满意,&lt;br&gt;想到java是跑在jvm上的,&lt;br&gt;是否jvm本身就需要占用那么多的内存呢,&lt;br&gt;决定打开jconsole来看一看.&lt;br&gt;java内存分为堆和非堆,来看定义:&lt;/p&gt;
&lt;blockquote&gt;
&lt;h5 id=
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="JVM" scheme="https://winry.me/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>博客启用https(支持hexo)</title>
    <link href="https://winry.me/2015/10/09/%E5%8D%9A%E5%AE%A2%E5%90%AF%E7%94%A8https/"/>
    <id>https://winry.me/2015/10/09/博客启用https/</id>
    <published>2015-10-08T16:00:00.000Z</published>
    <updated>2016-02-15T14:41:04.930Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cloudflare.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CloudFlare&lt;/a&gt;是目前唯一一家提供免费ssl的cdn,注册完设置好nameserver之后大约等一个多小时,&lt;br&gt;网站就可以使用https访问了.&lt;br&gt;&lt;a href=&quot;https://www.ssllabs.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ssllabs&lt;/a&gt;的测试结果:&lt;br&gt;&lt;img src=&quot;/img/56179c7581b1d.jpg&quot; alt=&quot;&quot; title=&quot;result&quot;&gt;&lt;br&gt;从图中可以看到,浏览器必须支持sni.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后就是让用户的http请求跳转到https.&lt;br&gt;在 &lt;code&gt;layout/_scripts&lt;/code&gt; 目录下加一个 script,然后在 &lt;code&gt;layout/_layout.swig&lt;/code&gt; 中 include 进去.&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; host = &lt;span class=&quot;string&quot;&gt;&quot;yoursite.com&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((host == &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.host) &amp;amp;&amp;amp; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.protocol != &lt;span class=&quot;string&quot;&gt;&quot;https:&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.location.protocol = &lt;span class=&quot;string&quot;&gt;&quot;https&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置网站的url,让google等搜索引擎知道你正在使用ssl.&lt;br&gt;在&lt;code&gt;_config.yml&lt;/code&gt;中增加:&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;attribute&quot;&gt;https&lt;/span&gt;:&lt;span class=&quot;comment&quot;&gt;//www.yoursite.com   # with the https protocol&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;enforce_ssl&lt;/span&gt;: www.yoursite.com   # without any protocol&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考:&lt;br&gt;&lt;a href=&quot;https://sheharyar.me/blog/free-ssl-for-github-pages-with-custom-domains/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Set Up SSL on Github Pages With Custom Domains for Free&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/issues/123&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTPS下点击页面自动跳转HTTP&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cloudflare.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CloudFlare&lt;/a&gt;是目前唯一一家提供免费ssl的cdn,注册完设置好nameserver之后大约等一个多小时,&lt;b
    
    </summary>
    
      <category term="互联网" scheme="https://winry.me/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="hexo" scheme="https://winry.me/tags/hexo/"/>
    
      <category term="https" scheme="https://winry.me/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>Java8 Mixin</title>
    <link href="https://winry.me/2015/09/15/java8-mixin/"/>
    <id>https://winry.me/2015/09/15/java8-mixin/</id>
    <published>2015-09-14T16:00:00.000Z</published>
    <updated>2016-07-01T15:43:26.602Z</updated>
    
    <content type="html">&lt;p&gt;java8开始接口支持了默认方法,从此mixin也变为可能了.&lt;/p&gt;
&lt;p&gt;先来看看mixin是什么:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In object-oriented programming languages, a mixin is a class that contains a &lt;strong&gt;&lt;em&gt;combination&lt;/em&gt;&lt;/strong&gt; of methods from other classes. How such a combination is done depends on the language. If a combination contains all methods of combined classes, it is equivalent to &lt;strong&gt;&lt;em&gt;multiple inheritance&lt;/em&gt;&lt;/strong&gt;. Mixins are sometimes described as being “included” rather than “inherited”.&lt;/p&gt;
&lt;p&gt;Mixins encourage code reuse and can be used to avoid the inheritance ambiguity that multiple inheritance can cause (the “&lt;a href=&quot;https://en.wikipedia.org/wiki/Multiple_inheritance#The_diamond_problem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;diamond problem&lt;/a&gt;“), or to work around lack of support for multiple inheritance in a language. A mixin can also be viewed as an &lt;strong&gt;&lt;em&gt;interface with implemented methods&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;mixin混合了其他类的功能但是又不会引发多重继承的问题.&lt;/p&gt;
&lt;p&gt;下面是一个简单的迭代器.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbsIterator&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; T &lt;span class=&quot;title&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;给上面的迭代器增加了foreach方法,接收一个consumer,&lt;br&gt;对每个元素执行相同的操作.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RichIterator&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbsIterator&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Consumer&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; T&amp;gt; consumer)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (hasNext())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			consumer.accept(next());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一个基于String的实现.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringIterator&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbsIterator&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Character&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringIterator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.s = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i &amp;lt; s.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Character &lt;span class=&quot;title&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Character character = s.charAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; character;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后是一个测试类.&lt;br&gt;测试用的迭代器即有StringIterator的实现,&lt;br&gt;又具有RichIterator的foreach方法.&lt;br&gt;在java8以前我们要怎么做这件事呢,&lt;br&gt;似乎是没法做,&lt;br&gt;由于接口没有默认方法,&lt;br&gt;我们必须在每个迭代器实现中重写foreach方法.&lt;br&gt;mixin增强了代码的重用能力.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringIteratorTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Iter iter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Iter(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		iter.foreach(System.out::println);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StringIterator&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RichIterator&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Character&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Iter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不过值得注意的是，java的mixin比scala在功能还是要弱一些，由于scala有with关键字，可以在实例化时进行mixin，可以直接强化trait的方法，类似于装饰器的作用。java里子类的实现则会直接覆盖掉父类。&lt;/p&gt;
&lt;p&gt;参考:&lt;a href=&quot;http://www.scala-lang.org/old/node/117&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;scala-mixin&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;java8开始接口支持了默认方法,从此mixin也变为可能了.&lt;/p&gt;
&lt;p&gt;先来看看mixin是什么:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In object-oriented programming languages, a mixin is a class tha
    
    </summary>
    
      <category term="Programming" scheme="https://winry.me/categories/Programming/"/>
    
    
      <category term="Java 8" scheme="https://winry.me/tags/Java-8/"/>
    
      <category term="Mixin" scheme="https://winry.me/tags/Mixin/"/>
    
  </entry>
  
</feed>
